@model LahoreGarrisonUniversity.Models.Job

@{
    ViewBag.Title = "Edit Job";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Jobs", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Edit Job</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)
        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JobReference, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.JobReference)
                @Html.ValidationMessageFor(model => model.JobReference)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Department, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.DropDownListFor(model => model.Department, new SelectList(
                  new List<Object>{
                       new { value = "Computer Science" , text = "Computer Science"},
                       new { value = "Chemistry", text = "Chemistry"},
                       new { value = "Physics", text = "Physics"},
                       new { value = "Biology", text = "Biology"},
                       new { value = "Maths", text = "Maths"}
                    },
                  "value",
                  "text",
                   2))
                @Html.ValidationMessageFor(model => model.Department)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Location, new SelectList(
                  new List<Object>{
                       new { value = "Main Campus" , text = "Main Campus"  },
                       new { value = "Jinnah Campus" , text = "Jinnah Campus" }
                    },
                  "value",
                  "text",
                   2))
                @Html.ValidationMessageFor(model => model.Location)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MinimumSalary, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MinimumSalary)
                @Html.ValidationMessageFor(model => model.MinimumSalary)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaximumSalary, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaximumSalary)
                @Html.ValidationMessageFor(model => model.MaximumSalary)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.hours, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.hours, new SelectList(
                  new List<Object>{
                       new { value = "Full Time" , text = "Full Time"  },
                       new { value = "Part Time" , text = "Part Time" }
                    },
                  "value",
                  "text",
                   2))
                @Html.ValidationMessageFor(model => model.hours)
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.CreatedAt, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedAt)
                @Html.ValidationMessageFor(model => model.CreatedAt)
            </div>
        </div>*@
        
        <div class="form-group">
            @Html.LabelFor(model => model.LastDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.LastDate, new {@id="datepicker"})
                @Html.ValidationMessageFor(model => model.LastDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationForm, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ApplicationForm, new { type = "file" })
                @Html.ValidationMessageFor(model => model.ApplicationForm)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailToApply, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailToApply)
                @Html.ValidationMessageFor(model => model.EmailToApply)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
